<sect1><title>Используемое программное обеспечение</title>
<sect2><title>Операционная система</title>
<para>
На момент написания этого документа наиболее удобной
для генерации итоговых форматов (html, pdf) является
операционная система Ubuntu (Linux), она является бесплатной
и при этом достаточно простой. Её можно скачать
с сайта http://www.ubuntu.com (имеет смысл
использовать самую последнюю версию, Desktop Edition).
</para>
</sect2>

<sect2><title>Пакеты, которые нужно установить</title>
<para>
После установки операционной системы нужно установить
программное обеспечение для работы с docbook. В Ubuntu
установка программного обеспечения производится
с помощью команды <code>sudo apt-get install имя_пакета</code> в терминале.
</para>

<para>
Для работы с docbook нужно установить следующие пакеты:
docbook-xml, docbook-xsl, sun-java6-jre, xsltproc.
Установка пакетов должна производиться либо с помощью sudo,
как в примере выше, либо из-под пользователя root.
</para>

<para>
Пакет sun-java6-jre может располагаться в репозитории пакетов,
не подключаемых по умолчанию. В Ubuntu Lucid (10.04)
он находится в репозитории partner, который
подключается в /etc/apt/sources.list (нужно раскомментировать
соответствующую строку). После изменения sources.list нужно
выполнить команду apt-get update.
</para>


<para>
После установки пакетов нужно убедиться, что по умолчанию
в системе используется именно Sun Java, для этого
нужно вывести список установленных java-машин:
<literallayout>
root@petya-desktop:~# /usr/sbin/update-java-alternatives -l
java-6-sun 63 /usr/lib/jvm/java-6-sun
java-gcj 1042 /usr/lib/jvm/java-gcj
</literallayout>

И установить нужную java-машину по умолчанию с помощью команды
<code>/usr/sbin/update-java-alternatives -s java-6-sun</code>
</para>
</sect2>
</sect1>

<sect1><title>Получение html-вывода</title>
<para>
Для получения html-варианта книги, нужно использовать команду xsltproc:
<emphasis>
xsltproc имя_xsl_файла имя_docbook_файла
</emphasis>
В качестве имени xsl-файла нужно задать /usr/share/xml/docbook/stylesheet/nwalsh/html/chunk.xsl,
а в качестве имени docbook файла &mdash; имя мастер файла.
</para>

<para>
Обычно может понадобиться настройка стандартного chunk.xsl,
она делается путем создания собственного xsl файла,
импортирующего chunk.xsl и определяющего нужные параметры.
<ulink url="http://www.kohts.ru/ladygina-kohts/ichc/build/docbook-html-chunked.xsl">Пример для книги Дитя шимпанзе и дитя человека</ulink>
</para>
</sect1>

<sect1><title>Получение pdf-вывода</title>
<para>
Получение pdf-варианта книги состоит из 1) получения документа
в формате FO (formatting objects) с помощью xsltproc,
получение pdf из документа fo с помощью <ulink url="http://xmlgraphics.apache.org/fop/">fop</ulink>.
</para>

<para>
Получение документа FO является шагом, абсолютно
аналогичным получения документа в формате HTML.
</para>

<para>
Для получения собственно pdf нужно установить программу fop,
на данный момент наиболее удачный вывод получается с помощью
development-кода, который можно получить из <ulink url="http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/">svn</ulink>
с помощью команды:
<code>
svn export http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/
</code>
После этого fop нужно скомпилировать, для чего нужно установить
пакеты sun-java6-jdk и ant, а после этого запустить команду ant
в директории с исходным кодом fop.
</para>

<para>
Для больших pdf файлов может понадобиться увеличить Max Heap Size для java
(индикатором необходимости являются сообщения типа "Exception in thread "main"
java.lang.OutOfMemoryError: Java heap space"). Для современных версий java
для этого нужно передать параметр -Xmx512m при вызове java (где 512m означает
512 мегабайт).
</para>


<para>
Кроме того потребуется файл с определениями правил переноса слов:
http://offo.sourceforge.net/hyphenation/index.html
</para>

<sect2><title>Подготовка шрифта для вывода в pdf</title>
<para>
Для вывода в pdf нужно подобрать шрифт, содержащий все необходимые символы,
используемые в книге. Для современных книг на русском языке подходит шрифт
Arial Unicode MS, который можно взять из установленной Windows (c:\windows\fonts\arialuni.ttf),
для книг в орфографии до 1918 года (ять, и с точкой) подходит Palatino Linotype
(c:\windows\fonts\pala.ttf).
</para>

<para>
Кроме файлов с основным шрифтом скорее всего потребуются файлы
с наклонным, полужирным и наклонным полужирным шрифтами.
</para>

<para>
Для Arial Unicode MS таких файлов нет, поэтому можно использовать
аналогичные модификации шрифта от Arial: arialbd.ttf, arialbi.ttf, ariali.ttf.
</para>

<para>
Для Palatino Linotype это: palab.ttf, palai.ttf, palabi.ttf.
</para>

<para>
Для использования указанных файлов при выводе в pdf
нужно создать для них xml-файлы с описанием, что делается
с помощью команды fop-ttfreader имя_файла.ttf имя_файла.xml
</para>

<para>
Скрипт fop-ttfreader является специфичным для debian пакета fop:
<code>
petya@petya-desktop:~$ cat /usr/bin/fop-ttfreader
#!/bin/sh

# Shell script wrapper around the fop-ttfreader program,
# Copyright 2008 by Vincent Fourmond fourmond@debian.org
#
# Licensed under the same terms as fop itself, that is under
# the conditions of the Apache 2 licencee.

# Include the wrappers utility script
. /usr/lib/java-wrappers/java-wrappers.sh


# We prefer to use openjdk or Sun's java if available
find_java_runtime openjdk sun  || find_java_runtime

find_jars commons-io avalon-framework serializer xalan2 xml-apis
find_jars batik-all commons-logging servlet-api xercesImpl xmlgraphics-commons
find_jars fop


run_java org.apache.fop.fonts.apps.TTFReader  "$@"
</code>
</para>
</sect2>
</sect1>
